@page
@model ShoppingListArduino.Pages.UserProducts.CreateModel

@{
    ViewData["Title"] = "Create";
}

<h2>Create</h2>

<h4>UserProduct</h4>
<hr />
<section id="container" class="container">
    <h3>The user's camera</h3>
    <p>
        If your platform supports the <strong>getUserMedia</strong> API call, you can try the real-time locating and decoding features.
        Simply allow the page to access your web-cam and point it to a barcode. You can switch between <strong>Code128</strong>
        and <strong>EAN</strong> to test different scenarios.
        It works best if your camera has built-in auto-focus.
    </p>
    <div class="controls">
        <fieldset class="input-group">
            <button class="stop">Stop</button>
        </fieldset>
        <fieldset class="reader-config-group">
            <label>
                <span>Barcode-Type</span>
                <select name="decoder_readers">
                    <option value="code_128">Code 128</option>
                    <option value="code_39">Code 39</option>
                    <option value="code_39_vin">Code 39 VIN</option>
                    <option value="ean" selected="selected">EAN</option>
                    <option value="ean_extended">EAN-extended</option>
                    <option value="ean_8">EAN-8</option>
                    <option value="upc">UPC</option>
                    <option value="upc_e">UPC-E</option>
                    <option value="codabar">Codabar</option>
                    <option value="i2of5">Interleaved 2 of 5</option>
                    <option value="2of5">Standard 2 of 5</option>
                    <option value="code_93">Code 93</option>
                </select>
            </label>
            <label>
                <span>Resolution (width)</span>
                <select name="input-stream_constraints">
                    <option value="320x240">320px</option>
                    <option selected="selected" value="640x480">640px</option>
                    <option value="800x600">800px</option>
                    <option value="1280x720">1280px</option>
                    <option value="1600x960">1600px</option>
                    <option value="1920x1080">1920px</option>
                </select>
            </label>
            <label>
                <span>Patch-Size</span>
                <select name="locator_patch-size">
                    <option value="x-small">x-small</option>
                    <option value="small">small</option>
                    <option selected="selected" value="medium">medium</option>
                    <option value="large">large</option>
                    <option value="x-large">x-large</option>
                </select>
            </label>
            <label>
                <span>Half-Sample</span>
                <input type="checkbox" checked="checked" name="locator_half-sample" />
            </label>
            <label>
                <span>Workers</span>
                <select name="numOfWorkers">
                    <option value="0">0</option>
                    <option value="1">1</option>
                    <option value="2">2</option>
                    <option selected="selected" value="4">4</option>
                    <option value="8">8</option>
                </select>
            </label>
            <label>
                <span>Camera</span>
                <select name="input-stream_constraints" id="deviceSelection"></select>
            </label>
            <label style="display: none">
                <span>Zoom</span>
                <select name="settings_zoom"></select>
            </label>
            <label style="display: none">
                <span>Torch</span>
                <input type="checkbox" name="settings_torch" />
            </label>
        </fieldset>
    </div>
    <div id="result_strip">
        <ul class="thumbnails"></ul>
        <ul class="collector"></ul>
    </div>
    <div id="interactive" class="viewport"></div>
</section>

<div class="row hidden">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="UserProduct.ProductId" class="control-label"></label>
                <select asp-for="UserProduct.ProductId" class="form-control" asp-items="ViewBag.ProductId"></select>
            </div>
            <div class="form-group">
                <label asp-for="UserProduct.UserId" class="control-label"></label>
                <select asp-for="UserProduct.UserId" class="form-control" asp-items="ViewBag.UserId"></select>
            </div>
            <div class="form-group">
                <label asp-for="UserProduct.Quantity" class="control-label"></label>
                <input asp-for="UserProduct.Quantity" value="1" class="form-control" />
                <span asp-validation-for="UserProduct.Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>


@section Scripts {

    <script src="~/js/quagga.min.js"></script>
    <script src="~/js/scanWithQuagga.js"></script>

    <script>
        Quagga.onDetected(function (result) {

            var code = result.codeResult.code;
            //if (App.lastResult !== code) {
            App.lastResult = code;
            var productQuantity = $("#UserProduct_Quantity").val();
            var userId = $("#UserProduct_UserId").val();
            $.confirm({
                title: 'Is the barcode is ' + code + '?',
                content: 'Simple confirm!',
                buttons: {
                    Yes: function () {
                        $.get("/api/get-product",
                            { code: code }, function (resp) {
                                if (resp.success) {
                                    var productId = resp.product.id;
                                    var data = {
                                        userId: userId,
                                        quantity: productQuantity,
                                        productId: resp.product.id
                                    };

                                    $.post("/api/add-user-product", data).done(function (response) {
                                        if (response.success === true) {
                                            $.alert("successfully addedd!");
                                            document.location.reload(true);
                                        } else {
                                            $.alert("Something went wrong!");
                                        }

                                    });
                                } else {
                                    $.confirm({
                                        title: 'Add this product!',
                                        content: '' +
                                            '<form action="" class="formName">' +
                                            '<div class="form-group">' +
                                            '<label>Title</label>' +
                                            '<input type="text" name="Product.Title" placeholder="Product Title" class="name form-control" required />' +
                                            '<label>Description</label>' +
                                            '<input type="text" name="Product.Description" placeholder="Product Description" class="name form-control" required />' +
                                            '</div>' +
                                            '</form>',
                                        buttons: {
                                            formSubmit: {
                                                text: 'Submit',
                                                btnClass: 'btn-blue',
                                                action: function () {
                                                    var formData = new FormData(this.$content.find('form')[0]);
                                                    formData.append("Product.Barcode", code);
                                                    formData.append("__RequestVerificationToken", $('input:hidden[name="__RequestVerificationToken"]').val());
                                                    ajaxPostWithVerificationToken(formData, function (resp) {
                                                        $.get("/api/get-product",
                                                            { code: code },
                                                            function (resp) {
                                                                if (resp.success) {
                                                                    var data = {
                                                                        userId: userId,
                                                                        quantity: productQuantity,
                                                                        productId: resp.product.id
                                                                    };

                                                                    $.post("/api/add-user-product", data).done(function (response) {
                                                                        if (response.success === true) {
                                                                            $.alert("successfully addedd!");
                                                                            document.location.reload(true);
                                                                        } else {
                                                                            $.alert("Something went wrong!");
                                                                        }
                                                                    });
                                                                }
                                                            });
                                                    }, function (err) {
                                                        console.log(err)
                                                    });
                                                }
                                            },
                                            cancel: function () {
                                                //close
                                            },
                                        },
                                        onContentReady: function () {
                                            // bind to events
                                            var jc = this;
                                            this.$content.find('form').on('submit', function (e) {
                                                // if the user submits the form by pressing enter in the field.
                                                e.preventDefault();
                                                jc.$$formSubmit.trigger('click'); // reference the button and click it
                                            });
                                        }
                                    });
                                }

                            });
                    },
                    No: function () {
                        $.alert('Scan the barcode again!!');
                        return;
                    }
                }
            });

            //var $node = null, canvas = Quagga.canvas.dom.image;


            //$node = $('<li><div class="thumbnail"><div class="imgWrapper"><img /></div><div class="caption"><h4 class="code"></h4></div></div></li>');
            //$node.find("img").attr("src", canvas.toDataURL());
            //$node.find("h4.code").html(code);
            //$("#result_strip ul.thumbnails").prepend($node);
            //}
        });
    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
